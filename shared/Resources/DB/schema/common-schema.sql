"sip_server_info","CREATE TABLE IF NOT EXISTS sip_server_info ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, fqdn VARCHAR(50,0), port INTEGER DEFAULT 5061, transport VARCHAR(5,0) DEFAULT 'TLS', last_updated_user varchar, last_updated date )";
"taxonomy","CREATE TABLE IF NOT EXISTS taxonomy ( code varchar(10) NOT NULL , type varchar(126) DEFAULT NULL, classification varchar(126) DEFAULT NULL, specialization varchar(126) DEFAULT NULL, PRIMARY KEY (code) )";
"qliq_group","CREATE TABLE IF NOT EXISTS qliq_group (guid text NOT NULL PRIMARY KEY,name text,type text,npi text,state text,city text,zip text,address text)";
"qliq_user","CREATE TABLE IF NOT EXISTS qliq_user (email text NOT NULL PRIMARY KEY,first_name text,middle_name text,last_name text,prefix text,initials text,suffix text,state text,city text,zip text,address text,mobile text,phone text,fax text,sip_uri text,npi integer,credentials text,taxonomy_code text, kind text)";
"user_group","CREATE TABLE IF NOT EXISTS user_group (user_id text, group_id text, FOREIGN KEY (user_id) REFERENCES qliq_user (email), FOREIGN KEY (group_id) REFERENCES qliq_group (guid) )";
"conversation","CREATE TABLE IF NOT EXISTS conversation (id integer NOT NULL PRIMARY KEY AUTOINCREMENT,subject text NOT NULL,created_at datetime NOT NULL,last_updated datetime NOT NULL,archived integer DEFAULT 0,deleted integer DEFAULT 0); CREATE IF NOT EXISTS INDEX subject_idx ON conversation (subject COLLATE NOCASE)";
"conversation_leg","CREATE TABLE IF NOT EXISTS conversation_leg (id integer NOT NULL PRIMARY KEY AUTOINCREMENT,conversation_id integer NOT NULL,user_id text NOT NULL,joined_at datetime NOT NULL,left_at datetime); CREATE INDEX IF NOT EXISTS conversation_id_idx ON conversation_leg (conversation_id); CREATE INDEX IF NOT EXISTS user_id_idx ON conversation_leg (user_id)";
"message","CREATE TABLE IF NOT EXISTS message ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, conversation_id INTEGER, from_user_id TEXT, to_user_id TEXT, message TEXT, uuid TEXT, ack_required INTEGER, timestamp DATETIME, delivery_status INTEGER, failed_attempts INTEGER, last_sent_at DATETIME, ack_received_at DATETIME, received_at DATETIME, read_at DATETIME, ack_sent_at DATETIME, rev text, author text, seq text, is_rev_dirty INTEGER,  local_created_time DATE DEFAULT (datetime('now','localtime')), call_id TEXT, CONSTRAINT conversation_id_fk FOREIGN KEY (conversation_id) REFERENCES conversation (id) ); CREATE INDEX IF NOT EXISTS conversation_id_idx ON message (conversation_id); CREATE INDEX IF NOT EXISTS from_user_id_idx ON message (from_user_id); CREATE INDEX IF NOT EXISTS to_user_id_idx ON message (to_user_id)";
