"role_type","CREATE TABLE IF NOT EXISTS role_type ( id integer NOT NULL PRIMARY KEY AUTOINCREMENT, role text NOT NULL )";
"social_worker","CREATE TABLE IF NOT EXISTS social_worker ( id numeric NOT NULL, facility_npi numeric, prefix text(10,0), name text(50,0), suffix text, initials text(2,0), mobile text(15,0), phone text(15,0), fax text(15,0), email text(50,0), taxonomy_code text, PRIMARY KEY(id) )";
"staff","CREATE TABLE IF NOT EXISTS staff ( id numeric NOT NULL, facility_npi numeric, prefix text, name text, suffix text, credentials text, initials text, mobile text, phone text, fax text, email text, group_id integer, PRIMARY KEY(id) )";
"state","CREATE TABLE IF NOT EXISTS state ( id    integer PRIMARY KEY, code  char(5), name  char(100) )";
"status","CREATE TABLE IF NOT EXISTS status (id INTEGER NOT NULL, status VARCHAR(45), PRIMARY KEY (id))";
"buddylist","CREATE TABLE IF NOT EXISTS buddylist ( user_id varchar(50,0) NOT NULL, buddy_user_id varchar(50,0) NOT NULL, last_updated_user varchar(50,0), last_updated date, FOREIGN KEY (user_id) REFERENCES user_sip_config (user_id), FOREIGN KEY (buddy_user_id) REFERENCES user_sip_config (user_id) )";
"facility_type","CREATE TABLE IF NOT EXISTS facility_type ( id   integer PRIMARY KEY AUTOINCREMENT, name char(50) )";
"nurse","CREATE TABLE IF NOT EXISTS nurse ( id numeric NOT NULL, npi text, facility_npi text, prefix text, name text, suffix text, credentials text, initials text, mobile text, phone text, fax text, email text, taxonomy_code text, group_id integer, PRIMARY KEY(id) )";
"careteam","CREATE TABLE IF NOT EXISTS careteam (id integer NOT NULL PRIMARY KEY AUTOINCREMENT, user_id text,admit integer,active integer)";
"patient","CREATE TABLE IF NOT EXISTS patient (guid text PRIMARY KEY,first_name char(50),middle_name char(50),last_name char(50),date_of_birth date,race char(50),gender char(50),phone char(15),email char(50),insurance char(50))";
"patient_visit","CREATE TABLE IF NOT EXISTS patient_visit (id integer PRIMARY KEY AUTOINCREMENT UNIQUE,careteam_id integer,type text,patient_guid text REFERENCES patient (guid),facility_npi integer REFERENCES facility (npi),consult integer,mrn text,floor_id integer REFERENCES floor (id), room text,admit_date date,discharge_date date,appt_start_date date,duration integer,reminder integer,reason text,active integer,uuid text,rev text,author text,seq integer,is_rev_dirty integer)";
"patient_contact","CREATE TABLE IF NOT EXISTS patient_contact ( id integer NOT NULL PRIMARY KEY AUTOINCREMENT, patient_id integer, name text, relation text, phone text, mobile text, email text, is_primary char(1,0) )";
"pharmacist","CREATE TABLE IF NOT EXISTS pharmacist ( id numeric NOT NULL, facility_npi numeric, prefix text, name text, suffix text, credentials text, initials text, mobile text, phone text, fax text, email text, taxonomy_code text, PRIMARY KEY(id) )";
"physician","CREATE TABLE IF NOT EXISTS physician ( npi numeric, group_id integer, group_flag smallint, name text(50,0), initials text(2,0), state text(2,0), zip text(10,0), mobile text(15,0), phone text(15,0), fax text(15,0), email text(50,0), prefix text(10,0), PRIMARY KEY(npi) )";
"physician_facility","CREATE TABLE IF NOT EXISTS physician_facility ( physician_npi numeric NOT NULL, facility_npi numeric NOT NULL, CONSTRAINT physician_fk FOREIGN KEY (physician_npi) REFERENCES physician (npi), CONSTRAINT facility_fk FOREIGN KEY (facility_npi) REFERENCES facility (npi) )";
"physician_group","CREATE TABLE IF NOT EXISTS physician_group ( id integer, name text(50,0), address text(50,0), city text(50,0), state text(5,0), zip text(10,0), phone text(15,0), fax text(15,0), admin_email text(50,0), admin_password text(50,0), PRIMARY KEY(id) )";
"physician_pref","CREATE TABLE IF NOT EXISTS physician_pref ( physician_npi numeric, number_of_days_to_bill integer, fax_to_primary integer, defacto_facility_npi numeric, last_used_patient_sort_order text, last_opened_facility_npi numeric, last_used_facility_npi numeric, last_used_superbill_Id integer, last_used_cpt_code text, last_selected_cpt_group_index integer, last_selected_cpt_code_index integer, last_selected_modifier_index integer, PRIMARY KEY(physician_npi), FOREIGN KEY (physician_npi) REFERENCES physician (npi) )";
"physician_superbill","CREATE TABLE IF NOT EXISTS physician_superbill ( physician_npi numeric, taxonomy_code varchar(10,0), preferred smallint, PRIMARY KEY(physician_npi), CONSTRAINT physician_fk FOREIGN KEY (physician_npi) REFERENCES physician (npi), CONSTRAINT taxonomy_code_fk FOREIGN KEY (taxonomy_code) REFERENCES taxonomy (code) )";
"referring_physician","CREATE TABLE IF NOT EXISTS referring_physician ( npi numeric, name text(50,0), address text(50,0), city text(50,0), state text(5,0), zip text(10,0), phone text(15,0), mobile text(15,0), fax text(15,0), email text(50,0), specialty text(50,0), PRIMARY KEY(npi) )";
"referring_provider","CREATE TABLE IF NOT EXISTS referring_provider ( npi numeric, first_name text, last_name text, middle_name text,prefix text,suffix text,credentials text,address text(50,0), city text(50,0), state text(5,0), zip text(10,0), phone text(15,0), mobile text(15,0), fax text(15,0), email text(50,0),taxonomy_code text(10,0), sip_uri text(50,0), PRIMARY KEY(npi) )";
"appointment","CREATE TABLE IF NOT EXISTS appointment ( id integer PRIMARY KEY AUTOINCREMENT, patient_id integer, physician_npi numeric, facility_npi numeric, appt_date date, appt_start time, appt_end time, reason text, room text(50,0), location text(50,0), reminder integer, mrn varchar(50,0), referring_physician_npi numeric, complete integer DEFAULT 0, last_updated_user varchar(50,0), last_updated date, FOREIGN KEY (patient_id) REFERENCES patient (id), FOREIGN KEY (facility_npi) REFERENCES facility (npi), FOREIGN KEY (physician_npi) REFERENCES physician (npi), FOREIGN KEY (referring_physician_npi) REFERENCES referring_physician (npi) )";
"census","CREATE TABLE IF NOT EXISTS census ( id integer PRIMARY KEY AUTOINCREMENT, patient_id integer, physician_npi numeric, active_physician_npi numeric, referring_physician_npi numeric, facility_npi numeric, consult integer, mrn varchar(50,0), room varchar(25,0), admit_date date, discharge_date date, active integer, last_updated_user varchar(50,0), last_updated date, uuid TEXT,  rev TEXT,  author TEXT,  seq INTEGER, is_rev_dirty INTEGER, FOREIGN KEY (patient_id) REFERENCES patient (id), FOREIGN KEY (physician_npi) REFERENCES physician (npi), FOREIGN KEY (active_physician_npi) REFERENCES physician (npi), FOREIGN KEY (facility_npi) REFERENCES facility (npi), FOREIGN KEY (referring_physician_npi) REFERENCES referring_physician (npi) )";
"cpt","CREATE TABLE IF NOT EXISTS cpt ( code varchar(50,0) NOT NULL, short_description varchar(100,0), long_description text, version_year integer, PRIMARY KEY(code) ); CREATE INDEX IF NOT EXISTS cpt_code_idx ON cpt (code ASC);";
"encounter","CREATE TABLE IF NOT EXISTS encounter (id integer NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,patient_visit_id integer REFERENCES patient_visit (id),date_of_service date,status integer,data text)";
"encounter_annex","CREATE TABLE IF NOT EXISTS encounter_annex ( id integer NOT NULL PRIMARY KEY AUTOINCREMENT, encounter_id integer,  value text,  value_desc text, status integer, created_date date,  created_user text,  last_updated date, last_updated_user text )";
"encounter_cpt","CREATE TABLE IF NOT EXISTS encounter_cpt (id integer NOT NULL, encounter_id integer,cpt_code varchar(50,0),last_updated_user varchar(50,0),last_updated date,created_user varchar(50,0),created_at date,status integer,PRIMARY KEY(id),FOREIGN KEY (cpt_code) REFERENCES cpt (code),FOREIGN KEY (encounter_id) REFERENCES encounter (id))";
"encounter_cpt_modifier","CREATE TABLE IF NOT EXISTS encounter_cpt_modifier (id integer NOT NULL PRIMARY KEY AUTOINCREMENT, encounter_cpt_id integer, modifier VARCHAR(25,0),last_updated_user varchar(50,0), last_updated date, status integer,FOREIGN KEY (encounter_cpt_id) REFERENCES encounter_cpt (id),FOREIGN KEY (modifier) REFERENCES modifier (id))";
"encounter_icd","CREATE TABLE IF NOT EXISTS encounter_icd ( id integer, encounter_cpt_id integer, icd_code varchar(50,0), primary_diagnosis smallint, last_updated_user varchar, last_updated date, status integer,PRIMARY KEY(id),FOREIGN KEY (encounter_cpt_id) REFERENCES encounter_cpt (id),FOREIGN KEY (icd_code) REFERENCES icd (code))";
"encounter_note","CREATE TABLE IF NOT EXISTS encounter_note ( id integer PRIMARY KEY AUTOINCREMENT, encounter_id integer, type_id integer, text_note text, voice_note blob, picture_note blob, last_updated_user varchar, last_updated date, FOREIGN KEY (encounter_id) REFERENCES encounter (id), FOREIGN KEY (type_id) REFERENCES note_type (id) )";
"favorite_cpt","CREATE TABLE IF NOT EXISTS favorite_cpt ( id integer NOT NULL, physician_npi numeric NOT NULL, cpt_code varchar(50,0) NOT NULL, PRIMARY KEY(id), FOREIGN KEY (physician_npi) REFERENCES physician (npi) )";
"favorite_facility","CREATE TABLE IF NOT EXISTS favorite_facility ( id integer, physician_npi numeric, facility_npi numeric, PRIMARY KEY(id), FOREIGN KEY (facility_npi) REFERENCES facility (npi), FOREIGN KEY (physician_npi) REFERENCES physician (npi) ); CREATE INDEX IF NOT EXISTS facility_id_idx ON favorite_facility (facility_npi ASC); CREATE INDEX IF NOT EXISTS physician_id_idx04 ON favorite_facility (physician_npi ASC); ";
"favorite_icd","CREATE TABLE IF NOT EXISTS favorite_icd ( id integer, physician_npi numeric, icd_code varchar(50,0), PRIMARY KEY(id), FOREIGN KEY (physician_npi) REFERENCES physician (npi) ); CREATE INDEX IF NOT EXISTS physician_id_idx05 ON favorite_icd (physician_npi ASC); ";
"icd","CREATE TABLE IF NOT EXISTS icd ( code char(50,0) NOT NULL, short_description text, long_description TEXT, PRIMARY KEY(code) ); CREATE INDEX IF NOT EXISTS icd_code_idx ON icd (code ASC); CREATE INDEX IF NOT EXISTS icd_short_description_idx ON icd (short_description); CREATE INDEX IF NOT EXISTS icd_long_description_idx ON icd (long_description); ";
"master_cpt_pft","CREATE TABLE IF NOT EXISTS master_cpt_pft (cpt_code VARCHAR(50) PRIMARY KEY NOT NULL, pft VARCHAR(256))";
"master_icd_pft","CREATE TABLE IF NOT EXISTS master_icd_pft (icd_code VARCHAR(50) PRIMARY KEY NOT NULL, pft VARCHAR(256)); CREATE INDEX IF NOT EXISTS pft_idx ON master_icd_pft (pft COLLATE NOCASE); ";
"modifier","CREATE TABLE IF NOT EXISTS modifier (id VARCHAR(5) NOT NULL, description VARCHAR(25), PRIMARY KEY (id))";
"note_type","CREATE TABLE IF NOT EXISTS note_type ( id  integer PRIMARY KEY, description  text )";
"superbill","CREATE TABLE IF NOT EXISTS superbill ( taxonomy_code varchar(10) PRIMARY KEY, name text, data text)";
"facility","CREATE TABLE  IF NOT EXISTS facility (npi numeric PRIMARY KEY,type text,name char(50,0),address char(50,0),city char(50,0),state char(5,0),zip char(10,0),country char(50,0),phone text)";
"user_facility","CREATE TABLE IF NOT EXISTS user_facility (user_id text, facility_npi numeric, FOREIGN KEY (user_id) REFERENCES qliq_user (email), FOREIGN KEY (facility_npi) REFERENCES facility (npi) )";
"group_facility","CREATE TABLE IF NOT EXISTS group_facility (group_id text REFERENCES qliq_group (guid),facility_npi integer REFERENCES facility (npi))";
"floor","CREATE TABLE IF NOT EXISTS floor (id integer PRIMARY KEY,facility_npi integer NOT NULL,name text NOT NULL,display_order integer,description text)";
"user_role","CREATE TABLE IF NOT EXISTS user_role ( user_id text NOT NULL, role text NOT NULL, category text, PRIMARY KEY(user_id,role) )";
"user_sip_config","CREATE TABLE IF NOT EXISTS user_sip_config ( user_id VARCHAR(50,0) NOT NULL, display_name VARCHAR(100,0), sip_uri VARCHAR(50,0), public_key text, last_updated_user varchar(50,0), last_updated date, PRIMARY KEY(user_id) )";

