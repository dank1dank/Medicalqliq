--- pjproject-2.1.0-org/pjsip/src/pjsua-lib/pjsua_acc.c	Wed Jan 16 09:51:45 2013
+++ pjproject-2.1.0/pjsip/src/pjsua-lib/pjsua_acc.c	Tue Mar 25 18:24:57 2014
@@ -2266,6 +2266,7 @@
     pjsua_acc *acc;
     pj_status_t status = 0;
     pjsip_tx_data *tdata = 0;
+    pjsip_regc_info reg_info;
 
     PJ_ASSERT_RETURN(acc_id>=0 && acc_id<(int)PJ_ARRAY_SIZE(pjsua_var.acc),
 		     PJ_EINVAL);
@@ -2288,6 +2289,24 @@
     /* Reset pointer to registration transport */
     pjsua_var.acc[acc_id].auto_rereg.reg_tp = NULL;
 
+    /*
+     * KK - 12/22/2013: initialize regc if
+     * current regc is busy with another transaction.
+     * This will clear the outstand registration requests
+     */
+
+    if (pjsua_var.acc[acc_id].regc != NULL) {
+        pjsip_regc_get_info(pjsua_var.acc[acc_id].regc, &reg_info);
+        if (reg_info.is_busy) {
+            status = pjsua_regc_init(acc_id);
+            if (status != PJ_SUCCESS) {
+                pjsua_perror(THIS_FILE, "Unable to create registration",
+                         status);
+                goto on_return;
+            }
+        }
+    }
+
     if (renew) {
 	if (pjsua_var.acc[acc_id].regc == NULL) {
 	    status = pjsua_regc_init(acc_id);
@@ -2362,7 +2381,6 @@
 
     /* Update pointer to registration transport */
     if (status == PJ_SUCCESS) {
-	pjsip_regc_info reg_info;
 
 	pjsip_regc_get_info(pjsua_var.acc[acc_id].regc, &reg_info);
 	pjsua_var.acc[acc_id].auto_rereg.reg_tp = reg_info.transport;
